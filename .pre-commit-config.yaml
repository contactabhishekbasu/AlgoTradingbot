# Pre-commit hooks configuration
# AlgoTradingbot - AI-Powered Trading System
#
# Installation: pre-commit install
# Manual run: pre-commit run --all-files
# Update hooks: pre-commit autoupdate

repos:
  # ============================================================================
  # General pre-commit hooks
  # ============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Check for files that would conflict in case-insensitive filesystems
      - id: check-case-conflict

      # Ensure files end with a newline
      - id: end-of-file-fixer
        exclude: \.min\.(js|css)$

      # Trim trailing whitespace
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]

      # Check for merge conflicts
      - id: check-merge-conflict

      # Check YAML syntax
      - id: check-yaml
        args: [--safe]

      # Check JSON syntax
      - id: check-json

      # Check TOML syntax
      - id: check-toml

      # Check for added large files (>500KB)
      - id: check-added-large-files
        args: [--maxkb=500]
        exclude: |
          (?x)^(
            .*\.pkl|
            .*\.h5|
            .*\.parquet|
            models/.*
          )$

      # Detect private keys
      - id: detect-private-key

      # Check for AWS credentials
      - id: detect-aws-credentials
        args: [--allow-missing-credentials]

      # Fix Python encoding pragma
      - id: fix-encoding-pragma
        args: [--remove]

      # Check for debugger imports
      - id: debug-statements

      # Check executables have shebangs
      - id: check-executables-have-shebangs

      # Check shebangs are correct
      - id: check-shebang-scripts-are-executable

      # Mixed line endings
      - id: mixed-line-ending
        args: [--fix=lf]

  # ============================================================================
  # Python code formatting - Black
  # ============================================================================
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=120]

  # ============================================================================
  # Python import sorting - isort
  # ============================================================================
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=120]

  # ============================================================================
  # Python linting - flake8
  # ============================================================================
  - repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args:
          - --max-line-length=120
          - --extend-ignore=E203,E266,E501,W503
          - --max-complexity=10
          - --select=B,C,E,F,W,T4,B9
        additional_dependencies:
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # ============================================================================
  # Python docstring formatting - docformatter
  # ============================================================================
  - repo: https://github.com/PyCQA/docformatter
    rev: v1.7.5
    hooks:
      - id: docformatter
        args: [--in-place, --wrap-summaries=120, --wrap-descriptions=120]

  # ============================================================================
  # Python security - bandit
  # ============================================================================
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: [-ll, -i]
        files: ^src/

  # ============================================================================
  # YAML formatting
  # ============================================================================
  - repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
    rev: v2.11.0
    hooks:
      - id: pretty-format-yaml
        args: [--autofix, --indent, '2']

  # ============================================================================
  # Markdown formatting
  # ============================================================================
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-gfm
          - mdformat-black
        args: [--wrap, '120']

  # ============================================================================
  # Check for secrets
  # ============================================================================
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: |
          (?x)^(
            .*\.ipynb|
            package-lock\.json
          )$

  # ============================================================================
  # Notebook quality
  # ============================================================================
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.1
    hooks:
      - id: nbqa-black
      - id: nbqa-isort
      - id: nbqa-flake8

  # ============================================================================
  # Type checking - mypy (optional, can be slow)
  # ============================================================================
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.7.1
  #   hooks:
  #     - id: mypy
  #       additional_dependencies:
  #         - types-requests
  #         - types-PyYAML
  #       args: [--ignore-missing-imports, --scripts-are-modules]
  #       files: ^src/

# ============================================================================
# Configuration
# ============================================================================
default_language_version:
  python: python3.11

# Files to exclude
exclude: |
  (?x)^(
    \.git/|
    \.venv/|
    venv/|
    build/|
    dist/|
    \.eggs/|
    .*\.egg-info/|
    __pycache__/|
    \.pytest_cache/|
    \.mypy_cache/|
    node_modules/|
    data/raw/|
    data/processed/|
    models/|
    logs/
  )$

# Fail fast - stop on first error
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: '2.20.0'
